// Generated by Xata Codegen 0.29.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "user",
    columns: [
      { name: "username", type: "string", unique: true },
      { name: "courtId", type: "link", link: { table: "court" } },
    ],
  },
  {
    name: "court",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "locationId", type: "link", link: { table: "location" } },
    ],
    revLinks: [{ column: "courtId", table: "user" }],
  },
  {
    name: "location",
    columns: [{ name: "name", type: "string" }],
    revLinks: [{ column: "locationId", table: "court" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type User = InferredTypes["user"];
export type UserRecord = User & XataRecord;

export type Court = InferredTypes["court"];
export type CourtRecord = Court & XataRecord;

export type Location = InferredTypes["location"];
export type LocationRecord = Location & XataRecord;

export type DatabaseSchema = {
  user: UserRecord;
  court: CourtRecord;
  location: LocationRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://HUGODEHSIGN-s-workspace-cjhdv3.us-east-1.xata.sh/db/baddy-manager",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
